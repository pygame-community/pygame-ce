name: Draft Github Release

on:
  push:
    branches: 'release/**'

jobs:
  manylinux-aarch64:
    runs-on: ubuntu-latest
    outputs:
      pipeline_id: ${{ steps.circleci.outputs.id }}

    steps:
      - name: Trigger CircleCI builds on release
        id: circleci
        uses: CircleCI-Public/trigger-circleci-pipeline-action@v1.2.0
        env:
          CCI_TOKEN: ${{ secrets.CCI_TOKEN }}

  manylinux:
    uses: ./.github/workflows/build-manylinux.yml

  macos:
    uses: ./.github/workflows/build-macos.yml

  windows:
    uses: ./.github/workflows/build-windows.yml

  sdist:
    uses: ./.github/workflows/build-ubuntu-sdist.yml

  draft-release:
    needs: [manylinux-aarch64, manylinux, macos, windows, sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.6

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: pygame-wheels
          merge-multiple: true

      - name: Download manylinux-aarch64 artifacts from CircleCI
        continue-on-error: true # incase things don't work here, can manually handle it
        run: >
          python3 buildconfig/ci/circleci/pull_circleci_artifacts.py
          ${{ secrets.CCI_TOKEN }}
          ${{ needs.manylinux-aarch64.outputs.pipeline_id }}
          pygame-wheels

      # Strips 'release/' from the ref_name, this helps us access the version
      # name as 'steps.ver.outputs.VER'
      - name: Get version
        id: ver
        run: echo "VER=${GITHUB_REF_NAME#'release/'}" >> $GITHUB_OUTPUT

      - name: Draft a release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: ${{ contains(steps.ver.outputs.VER, 'dev') }}
          files: pygame-wheels/*
          name: '${{ steps.ver.outputs.VER }} - {TODO put a title here} [DRAFTED BY CI]'
          tag_name: ${{ steps.ver.outputs.VER }}
          target_commitish: ${{ github.ref_name }}
          generate_release_notes: true
