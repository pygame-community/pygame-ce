# SDL3 porting is WIP
name: SDL3 build

# Run CI only when a release is created, on changes to main branch, or any PR
# to main. Do not run CI on any other branch. Also, skip any non-source changes
# from running on CI
on:
  push:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/build-sdl3.yml'

  pull_request:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/build-sdl3.yml'

  # the github release drafter can call this workflow
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-ubuntu-sdist
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # if a particular matrix build fails, don't skip the rest
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-15]

    env:
      # Pip now forces us to either make a venv or set this flag, so we will do
      # this
      PIP_BREAK_SYSTEM_PACKAGES: 1
      # We are using dependencies installed from apt
      PG_DEPS_FROM_SYSTEM: 1

    steps:
    - uses: actions/checkout@v5.0.0

    - name: Fix apt issues (linux)
      if: matrix.os == 'ubuntu-24.04'
      run: sudo apt-get update --fix-missing

    - name: Install pygame & SDL deps (mac)
      if: matrix.os == 'macos-15'
      run: brew install freetype harfbuzz portmidi libtiff webp

    - name: Install pygame & SDL deps (linux)
      if: matrix.os == 'ubuntu-24.04'
      run: >
        sudo apt-get install libasound2-dev libdbus-1-dev libdecor-0-dev libdrm-dev
        libegl-dev libgbm-dev libgl-dev libgles-dev libibus-1.0-dev libpulse-dev
        libsamplerate0-dev libsndio-dev libudev-dev libwayland-dev libx11-dev
        libxcursor-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev
        libxkbcommon-dev libxrandr-dev libxss-dev libxt-dev libxv-dev libxxf86vm-dev
        libfreetype-dev libharfbuzz-dev libportmidi-dev libtiff-dev libwebp-dev
        python3-dev

    # taken from https://wiki.libsdl.org/SDL3/Installation
    - name: Install SDL3
      if: matrix.os != 'windows-latest'
      run: |
        git clone https://github.com/libsdl-org/SDL
        cd SDL
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release --parallel
        sudo cmake --install . --config Release

    - name: Install SDL3_image
      if: matrix.os != 'windows-latest'
      run: |
        git clone https://github.com/libsdl-org/SDL_image
        cd SDL_image
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DSDLIMAGE_VENDORED=0 \
          -DSDLIMAGE_BACKEND_STB=1 -DSDLIMAGE_BACKEND_IMAGEIO=0 \
          -DSDLIMAGE_AVIF=0 -DSDLIMAGE_JXL=0 -DSDLIMAGE_TIF=1 -DSDLIMAGE_WEBP=1 ..
        cmake --build . --config Release --parallel
        sudo cmake --install . --config Release

    - name: Install SDL3_ttf
      if: matrix.os != 'windows-latest'
      run: |
        git clone https://github.com/libsdl-org/SDL_ttf
        cd SDL_ttf
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DSDLTTF_VENDORED=0 -DSDLTTF_HARFBUZZ=1 ..
        cmake --build . --config Release --parallel
        sudo cmake --install . --config Release

    - name: Build with SDL3
      run: python3 dev.py build --sdl3

    - name: Run tests
      env:
        SDL_VIDEODRIVER: "dummy"
        SDL_AUDIODRIVER: "disk"
      run: python3 -m pygame.tests -v --exclude opengl,music,timing --time_out 300
