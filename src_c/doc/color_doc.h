/* Auto generated file: with makeref.py .  Docs go in docs/reST/ref/ . */
#define DOC_COLOR "Color(r, g, b) -> Color\nColor(r, g, b, a=255) -> Color\nColor(color_value) -> Color\npygame object for color representations"
#define DOC_COLOR_R "r -> int\nGets or sets the red value of the Color."
#define DOC_COLOR_G "g -> int\nGets or sets the green value of the Color."
#define DOC_COLOR_B "b -> int\nGets or sets the blue value of the Color."
#define DOC_COLOR_A "a -> int\nGets or sets the alpha value of the Color."
#define DOC_COLOR_CMY "cmy -> tuple\nGets or sets the CMY representation of the Color."
#define DOC_COLOR_HSVA "hsva -> tuple\nGets or sets the HSVA representation of the Color."
#define DOC_COLOR_HSLA "hsla -> tuple\nGets or sets the HSLA representation of the Color."
#define DOC_COLOR_I1I2I3 "i1i2i3 -> tuple\nGets or sets the I1I2I3 representation of the Color."
#define DOC_COLOR_FROMCMY "from_cmy(object) -> Color\nfrom_cmy(c, m, y) -> Color\nReturns a Color object from a CMY representation"
#define DOC_COLOR_FROMHSVA "from_hsva(object) -> Color\nfrom_hsva(h, s, v, a) -> Color\nReturns a Color object from an HSVA representation"
#define DOC_COLOR_FROMHSLA "from_hsla(object) -> Color\nfrom_hsla(h, s, l, a) -> Color\nReturns a Color object from an HSLA representation"
#define DOC_COLOR_FROMI1I2I3 "from_i1i2i3(object) -> Color\nfrom_i1i2i3(i1, i2, i3) -> Color\nReturns a Color object from a I1I2I3 representation"
#define DOC_COLOR_NORMALIZE "normalize() -> tuple\nReturns the normalized RGBA values of the Color."
#define DOC_COLOR_CORRECTGAMMA "correct_gamma(gamma) -> Color\nApplies a certain gamma value to the Color."
#define DOC_COLOR_SETLENGTH "set_length(len) -> None\nSet the number of elements in the Color to 1,2,3, or 4."
#define DOC_COLOR_GRAYSCALE "grayscale() -> Color\nreturns the grayscale of a Color"
#define DOC_COLOR_LERP "lerp(Color, float) -> Color\nreturns a linear interpolation to the given Color."
#define DOC_COLOR_PREMULALPHA "premul_alpha() -> Color\nreturns a Color where the r,g,b components have been multiplied by the alpha."
#define DOC_COLOR_UPDATE "update(r, g, b) -> None\nupdate(r, g, b, a=255) -> None\nupdate(color_value) -> None\nSets the elements of the color"
