/* Auto generated file: with makeref.py .  Docs go in docs/reST/ref/ . */
#define DOC_CDROM "pygame module for audio cdrom control"
#define DOC_CDROM_INIT "init() -> None\ninitialize the cdrom module"
#define DOC_CDROM_QUIT "quit() -> None\nuninitialize the cdrom module"
#define DOC_CDROM_GETINIT "get_init() -> bool\ntrue if the cdrom module is initialized"
#define DOC_CDROM_GETCOUNT "get_count() -> count\nnumber of cd drives on the system"
#define DOC_CDROM_CD "CD(id) -> CD\nclass to manage a cdrom drive"
#define DOC_CDROM_CD_INIT "init() -> None\ninitialize a cdrom drive for use"
#define DOC_CDROM_CD_QUIT "quit() -> None\nuninitialize a cdrom drive for use"
#define DOC_CDROM_CD_GETINIT "get_init() -> bool\ntrue if this cd device initialized"
#define DOC_CDROM_CD_PLAY "play(track, start=None, end=None) -> None\nstart playing audio"
#define DOC_CDROM_CD_STOP "stop() -> None\nstop audio playback"
#define DOC_CDROM_CD_PAUSE "pause() -> None\ntemporarily stop audio playback"
#define DOC_CDROM_CD_RESUME "resume() -> None\nunpause audio playback"
#define DOC_CDROM_CD_EJECT "eject() -> None\neject or open the cdrom drive"
#define DOC_CDROM_CD_GETID "get_id() -> id\nthe index of the cdrom drive"
#define DOC_CDROM_CD_GETNAME "get_name() -> name\nthe system name of the cdrom drive"
#define DOC_CDROM_CD_GETBUSY "get_busy() -> bool\ntrue if the drive is playing audio"
#define DOC_CDROM_CD_GETPAUSED "get_paused() -> bool\ntrue if the drive is paused"
#define DOC_CDROM_CD_GETCURRENT "get_current() -> track, seconds\nthe current audio playback position"
#define DOC_CDROM_CD_GETEMPTY "get_empty() -> bool\nFalse if a cdrom is in the drive"
#define DOC_CDROM_CD_GETNUMTRACKS "get_numtracks() -> count\nthe number of tracks on the cdrom"
#define DOC_CDROM_CD_GETTRACKAUDIO "get_track_audio(track) -> bool\ntrue if the cdrom track has audio data"
#define DOC_CDROM_CD_GETALL "get_all() -> [(audio, start, end, length), ...]\nget all track information"
#define DOC_CDROM_CD_GETTRACKSTART "get_track_start(track) -> seconds\nstart time of a cdrom track"
#define DOC_CDROM_CD_GETTRACKLENGTH "get_track_length(track) -> seconds\nlength of a cdrom track"
