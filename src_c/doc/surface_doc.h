/* Auto generated file: with make_docs.py .  Docs go in docs/reST/ref/ . */
#define DOC_SURFACE "Surface(size, flags=0, depth=0, masks=None) -> Surface\nSurface(size, flags=0, surface=...) -> Surface\nPygame object for representing images."
#define DOC_SURFACE_BLIT "blit(source, dest=(0, 0), area=None, special_flags=0) -> Rect\nDraw another surface onto this one."
#define DOC_SURFACE_BLITS "blits(blit_sequence, doreturn=1) -> Union[list[Rect], None]\nDraw many surfaces onto this surface at their corresponding location."
#define DOC_SURFACE_FBLITS "fblits(blit_sequence, special_flags=0, /) -> None\nDraw many surfaces onto this surface at their corresponding location and with the same special_flags."
#define DOC_SURFACE_CONVERT "convert(surface, /) -> Surface\nconvert(depth, flags=0, /) -> Surface\nconvert(masks, flags=0, /) -> Surface\nconvert() -> Surface\nChange the pixel format of a surface."
#define DOC_SURFACE_CONVERTALPHA "convert_alpha() -> Surface\nChange the pixel format of a surface including per pixel alphas."
#define DOC_SURFACE_COPY "copy() -> Surface\nCreate a new copy of a Surface."
#define DOC_SURFACE_FILL "fill(color, rect=None, special_flags=0) -> Rect\nFill Surface with a solid color."
#define DOC_SURFACE_SCROLL "scroll(dx=0, dy=0, scroll_flag=0, /) -> None\nShift the Surface pixels in place."
#define DOC_SURFACE_SETCOLORKEY "set_colorkey(color, flags=0, /) -> None\nset_colorkey(color, /) -> None\nSet the transparent colorkey."
#define DOC_SURFACE_GETCOLORKEY "get_colorkey() -> Optional[tuple[int, int, int, int]]\nGet the current transparent colorkey."
#define DOC_SURFACE_SETALPHA "set_alpha(value, flags=0, /) -> None\nset_alpha(value, /) -> None\nSet the alpha value for the full Surface."
#define DOC_SURFACE_GETALPHA "get_alpha() -> Optional[int]\nGet the current Surface transparency value."
#define DOC_SURFACE_LOCK "lock() -> None\nLock the Surface memory for pixel access."
#define DOC_SURFACE_UNLOCK "unlock() -> None\nUnlock the Surface memory from pixel access."
#define DOC_SURFACE_MUSTLOCK "mustlock() -> bool\nTest if the Surface requires locking."
#define DOC_SURFACE_GETLOCKED "get_locked() -> bool\nTest if the Surface is current locked."
#define DOC_SURFACE_GETLOCKS "get_locks() -> tuple[Any, ...]\nGets the locks for the Surface."
#define DOC_SURFACE_GETAT "get_at(x_y, /) -> Color\nGet the color value at a single pixel."
#define DOC_SURFACE_SETAT "set_at(x_y, color, /) -> None\nSet the color value for a single pixel."
#define DOC_SURFACE_GETATMAPPED "get_at_mapped(x_y, /) -> int\nGet the mapped color value at a single pixel."
#define DOC_SURFACE_GETPALETTE "get_palette() -> list[Color]\nGet the color index palette for an 8-bit Surface."
#define DOC_SURFACE_GETPALETTEAT "get_palette_at(index, /) -> Color\nGet the color for a single entry in a palette."
#define DOC_SURFACE_SETPALETTE "set_palette(palette, /) -> None\nSet the color palette for an 8-bit Surface."
#define DOC_SURFACE_SETPALETTEAT "set_palette_at(index, color, /) -> None\nSet the color for a single index in an 8-bit Surface palette."
#define DOC_SURFACE_MAPRGB "map_rgb(color, /) -> int\nConvert a color into a mapped color value."
#define DOC_SURFACE_UNMAPRGB "unmap_rgb(mapped_int, /) -> Color\nConvert a mapped integer color value into a Color."
#define DOC_SURFACE_SETCLIP "set_clip(rect, /) -> None\nSet the current clipping area of the Surface."
#define DOC_SURFACE_GETCLIP "get_clip() -> Rect\nGet the current clipping area of the Surface."
#define DOC_SURFACE_SUBSURFACE "subsurface(rect, /) -> Surface\nsubsurface(left_top, width_height, /) -> Surface\nsubsurface(left, top, width, height, /) -> Surface\nCreate a new surface that references its parent."
#define DOC_SURFACE_GETPARENT "get_parent() -> Surface\nFind the parent of a subsurface."
#define DOC_SURFACE_GETABSPARENT "get_abs_parent() -> Surface\nFind the top level parent of a subsurface."
#define DOC_SURFACE_GETOFFSET "get_offset() -> tuple[int, int]\nFind the position of a child subsurface inside a parent."
#define DOC_SURFACE_GETABSOFFSET "get_abs_offset() -> tuple[int, int]\nFind the absolute position of a child subsurface inside its top level parent."
#define DOC_SURFACE_GETSIZE "get_size() -> tuple[int, int]\nGet the dimensions of the Surface."
#define DOC_SURFACE_GETWIDTH "get_width() -> int\nGet the width of the Surface."
#define DOC_SURFACE_GETHEIGHT "get_height() -> int\nGet the height of the Surface."
#define DOC_SURFACE_GETRECT "get_rect(**kwargs) -> Rect\nGet the rectangular area of the Surface."
#define DOC_SURFACE_GETFRECT "get_frect(**kwargs) -> FRect\nGet the rectangular area of the Surface."
#define DOC_SURFACE_GETBITSIZE "get_bitsize() -> int\nGet the bit depth of the Surface pixel format."
#define DOC_SURFACE_GETBYTESIZE "get_bytesize() -> int\nGet the bytes used per Surface pixel."
#define DOC_SURFACE_GETFLAGS "get_flags() -> int\nGet the additional flags used for the Surface."
#define DOC_SURFACE_GETPITCH "get_pitch() -> int\nGet the number of bytes used per Surface row."
#define DOC_SURFACE_GETMASKS "get_masks() -> tuple[int, int, int, int]\nThe bitmasks needed to convert between a color and a mapped integer."
#define DOC_SURFACE_SETMASKS "set_masks(color, /) -> None\nSet the bitmasks needed to convert between a color and a mapped integer."
#define DOC_SURFACE_GETSHIFTS "get_shifts() -> tuple[int, int, int, int]\nThe bit shifts needed to convert between a color and a mapped integer."
#define DOC_SURFACE_SETSHIFTS "set_shifts(color, /) -> None\nSets the bit shifts needed to convert between a color and a mapped integer."
#define DOC_SURFACE_GETLOSSES "get_losses() -> tuple[int, int, int, int]\nThe significant bits used to convert between a color and a mapped integer."
#define DOC_SURFACE_GETBOUNDINGRECT "get_bounding_rect(min_alpha=1) -> Rect\nFind the smallest rect containing data."
#define DOC_SURFACE_GETVIEW "get_view(kind='2', /) -> BufferProxy\nReturn a buffer view of the Surface's pixels."
#define DOC_SURFACE_GETBUFFER "get_buffer() -> BufferProxy\nAcquires a buffer object for the pixels of the Surface."
#define DOC_SURFACE_PIXELSADDRESS "_pixels_address -> int\nPixel buffer address."
#define DOC_SURFACE_PREMULALPHA "premul_alpha() -> Surface\nReturns a copy of the surface with the RGB channels pre-multiplied by the alpha channel."
#define DOC_SURFACE_PREMULALPHAIP "premul_alpha_ip() -> Surface\nMultiplies the RGB channels by the surface alpha channel."
#define DOC_SURFACE_WIDTH "width -> int\nSurface width in pixels (read-only)."
#define DOC_SURFACE_HEIGHT "height -> int\nSurface height in pixels (read-only)."
#define DOC_SURFACE_SIZE "size -> tuple[int, int]\nSurface size in pixels (read-only)."
