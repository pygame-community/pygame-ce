/* Auto generated file: with makeref.py .  Docs go in docs/reST/ref/ . */
#define DOC_GFXDRAW "pygame module for drawing shapes"
#define DOC_GFXDRAW_PIXEL "pixel(surface, x, y, color) -> None\ndraw a pixel"
#define DOC_GFXDRAW_HLINE "hline(surface, x1, x2, y, color) -> None\ndraw a horizontal line"
#define DOC_GFXDRAW_VLINE "vline(surface, x, y1, y2, color) -> None\ndraw a vertical line"
#define DOC_GFXDRAW_LINE "line(surface, x1, y1, x2, y2, color) -> None\ndraw a line"
#define DOC_GFXDRAW_RECTANGLE "rectangle(surface, rect, color) -> None\ndraw a rectangle"
#define DOC_GFXDRAW_BOX "box(surface, rect, color) -> None\ndraw a filled rectangle"
#define DOC_GFXDRAW_CIRCLE "circle(surface, x, y, r, color) -> None\ndraw a circle"
#define DOC_GFXDRAW_AACIRCLE "aacircle(surface, x, y, r, color) -> None\ndraw an antialiased circle"
#define DOC_GFXDRAW_FILLEDCIRCLE "filled_circle(surface, x, y, r, color) -> None\ndraw a filled circle"
#define DOC_GFXDRAW_ELLIPSE "ellipse(surface, x, y, rx, ry, color) -> None\ndraw an ellipse"
#define DOC_GFXDRAW_AAELLIPSE "aaellipse(surface, x, y, rx, ry, color) -> None\ndraw an antialiased ellipse"
#define DOC_GFXDRAW_FILLEDELLIPSE "filled_ellipse(surface, x, y, rx, ry, color) -> None\ndraw a filled ellipse"
#define DOC_GFXDRAW_ARC "arc(surface, x, y, r, start_angle, stop_angle, color) -> None\ndraw an arc"
#define DOC_GFXDRAW_PIE "pie(surface, x, y, r, start_angle, stop_angle, color) -> None\ndraw a pie"
#define DOC_GFXDRAW_TRIGON "trigon(surface, x1, y1, x2, y2, x3, y3, color) -> None\ndraw a trigon/triangle"
#define DOC_GFXDRAW_AATRIGON "aatrigon(surface, x1, y1, x2, y2, x3, y3, color) -> None\ndraw an antialiased trigon/triangle"
#define DOC_GFXDRAW_FILLEDTRIGON "filled_trigon(surface, x1, y1, x2, y2, x3, y3, color) -> None\ndraw a filled trigon/triangle"
#define DOC_GFXDRAW_POLYGON "polygon(surface, points, color) -> None\ndraw a polygon"
#define DOC_GFXDRAW_AAPOLYGON "aapolygon(surface, points, color) -> None\ndraw an antialiased polygon"
#define DOC_GFXDRAW_FILLEDPOLYGON "filled_polygon(surface, points, color) -> None\ndraw a filled polygon"
#define DOC_GFXDRAW_TEXTUREDPOLYGON "textured_polygon(surface, points, texture, tx, ty) -> None\ndraw a textured polygon"
#define DOC_GFXDRAW_BEZIER "bezier(surface, points, steps, color) -> None\ndraw a Bezier curve"
