/* Auto generated file: with makeref.py .  Docs go in docs/reST/ref/ . */
#define DOC_MIXER_MUSIC "pygame module for controlling streamed audio"
#define DOC_MIXER_MUSIC_LOAD "load(filename) -> None\nload(fileobj, namehint="") -> None\nLoad a music file for playback"
#define DOC_MIXER_MUSIC_UNLOAD "unload() -> None\nUnload the currently loaded music to free up resources"
#define DOC_MIXER_MUSIC_PLAY "play(loops=0, start=0.0, fade_ms=0) -> None\nStart the playback of the music stream"
#define DOC_MIXER_MUSIC_REWIND "rewind() -> None\nrestart music"
#define DOC_MIXER_MUSIC_STOP "stop() -> None\nstop the music playback"
#define DOC_MIXER_MUSIC_PAUSE "pause() -> None\ntemporarily stop music playback"
#define DOC_MIXER_MUSIC_UNPAUSE "unpause() -> None\nresume paused music"
#define DOC_MIXER_MUSIC_FADEOUT "fadeout(time) -> None\nstop music playback after fading out"
#define DOC_MIXER_MUSIC_SETVOLUME "set_volume(volume) -> None\nset the music volume"
#define DOC_MIXER_MUSIC_GETVOLUME "get_volume() -> value\nget the music volume"
#define DOC_MIXER_MUSIC_GETBUSY "get_busy() -> bool\ncheck if the music stream is playing"
#define DOC_MIXER_MUSIC_SETPOS "set_pos(pos) -> None\nset position to play from"
#define DOC_MIXER_MUSIC_GETPOS "get_pos() -> time\nget the music play time"
#define DOC_MIXER_MUSIC_QUEUE "queue(filename) -> None\nqueue(fileobj, namehint="", loops=0) -> None\nqueue a sound file to follow the current"
#define DOC_MIXER_MUSIC_SETENDEVENT "set_endevent() -> None\nset_endevent(type) -> None\nhave the music send an event when playback stops"
#define DOC_MIXER_MUSIC_GETENDEVENT "get_endevent() -> type\nget the event a channel sends when playback stops"
#define DOC_MIXER_MUSIC_GETMETADATA "get_metadata() -> dict\nget_metadata(filename) -> dict\nget_metadata(fileobj, namehint="") -> dict\nget metadata of the specified or currently loaded music stream"
