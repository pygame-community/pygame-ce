from __future__ import annotations

from .typing import SequenceLike, EventLike

_EventTypes = int | SequenceLike[int]

def pump(dopump: bool, /) -> None: ...
def _get(type: int, /) -> EventLike | None: ...
def _peek(type: int, /) -> bool: ...
def _proxify_event_type(type: int, /) -> int: ...
def video_check() -> None: ...
def poll() -> EventLike: ...
def wait(timeout: int = 0) -> EventLike: ...
def set_grab(grab: bool, /) -> None: ...
def get_grab() -> bool: ...
def allowed_get(type: int, /) -> bool: ...
def allowed_set(type: int, val: bool, /) -> None: ...
def post(event: EventLike, /) -> bool: ...
def register_event_class(cls: type[EventLike]) -> None: ...
def _internal_mod_init() -> None: ...
def _internal_mod_quit() -> None: ...
